apiVersion: apps.kubermatic.k8c.io/v1
kind: ApplicationInstallation
metadata:
  labels:
    apps.kubermatic.k8c.io/managed-by: kkp
    apps.kubermatic.k8c.io/type: cni
  name: cilium
  namespace: kube-system
spec:
  applicationRef:
    name: cilium
    version: 1.14.16
  deployOptions:
    helm:
      atomic: true
      timeout: 10m0s
      wait: true
  namespace:
    create: false
    name: kube-system
  reconciliationInterval: 0h10m0s
  valuesBlock: |
    certgen:
      podSecurityContext:
        seccompProfile:
          type: RuntimeDefault
    ##### mod - Mesh Setup
    cluster:
      id: 1
      name: cluster-1
    clustermesh:
      apiserver:
        service:
          type: LoadBalancer
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-internal: "true"
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
        tls:
          auto:
            method: cronJob
          ###### Mesh Setup Step 2
          ca:
            # ca.crt from the cilium-ca secret in Cluster 1 (important - not Cluster 2)
            cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNFekNDQWJxZ0F3SUJBZ0lVYXd1OUJXNG9LQnlBZlpCblZpRXFCRk0rMHE0d0NnWUlLb1pJemowRUF3SXcKYURFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBZ1REVk5oYmlCR2NtRnVZMmx6WTI4eEN6QUpCZ05WQkFjVApBa05CTVE4d0RRWURWUVFLRXdaRGFXeHBkVzB4RHpBTkJnTlZCQXNUQmtOcGJHbDFiVEVTTUJBR0ExVUVBeE1KClEybHNhWFZ0SUVOQk1CNFhEVEkxTURNek1ERXhNREl3TUZvWERUSTRNRE15T1RFeE1ESXdNRm93YURFTE1Ba0cKQTFVRUJoTUNWVk14RmpBVUJnTlZCQWdURFZOaGJpQkdjbUZ1WTJselkyOHhDekFKQmdOVkJBY1RBa05CTVE4dwpEUVlEVlFRS0V3WkRhV3hwZFcweER6QU5CZ05WQkFzVEJrTnBiR2wxYlRFU01CQUdBMVVFQXhNSlEybHNhWFZ0CklFTkJNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVWWEw4SXV1ZlIvZjNZSXp3NDBGOGpDcmUKdisrWEQ2ZmF4RVhrOEcvekRjVG0xeWRNMGRhMUx0ZE1uSU55RndMckR6MXh0NGI3cUVNRGpOdEordkNxbTZOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0ptCkNKYTlPNkpEVld5Qm9VOVZKTmpubjFzZU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lDVEZDaDJyaXorRnZTVmsKdVhoT0xhbm9MM2FmUXM5Z1JsYXRmanFBUWdlSkFpQVI5VnJXWnpPVk80SzAvTmJTTERMTGwxVnppbEZKdU9jSQpqbmJnKzhDNjF3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo
            # ca.key from the cilium-ca secret in Cluster 1 (important - not Cluster 2)
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFKL3hOeUhEMjVOQ0FFSzFLMTlKZ2hodmZWRXZ3SXBmbzM3bWNtOERlWjZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVlhMOEl1dWZSL2YzWUl6dzQwRjhqQ3JldisrWEQ2ZmF4RVhrOEcvekRjVG0xeWRNMGRhMQpMdGRNbklOeUZ3THJEejF4dDRiN3FFTURqTnRKK3ZDcW13PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
      config:
        enabled: true
        ###### Mesh Setup Step 2
        clusters:
          - name: cluster-2
            address: ""
            port: 2379
            ips:
              # external-ip of the clustermesh-apiserver svc in Cluster 2
              # ATTENTION host names doesn't work, needs to be IP!
              - 10.0.80.97
            tls:
              # tls.crt from clustermesh-apiserver-remote-cert secret in Cluster 2
              cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQWFDZ0F3SUJBZ0lVTEdNdnV3amhzeHJCQUxsemJTZVNPZHlOWW80d0NnWUlLb1pJemowRUF3SXcKYURFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBZ1REVk5oYmlCR2NtRnVZMmx6WTI4eEN6QUpCZ05WQkFjVApBa05CTVE4d0RRWURWUVFLRXdaRGFXeHBkVzB4RHpBTkJnTlZCQXNUQmtOcGJHbDFiVEVTTUJBR0ExVUVBeE1KClEybHNhWFZ0SUVOQk1CNFhEVEkxTURNek1ERXlNVEl3TUZvWERUSTRNRE15T1RFeU1USXdNRm93RVRFUE1BMEcKQTFVRUF4TUdjbVZ0YjNSbE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWRhSUtiMVFMSHo3cQp6TkRPRGNuSFdFMEMxUUo4Rk5NTWVrVExxdWozN3dtZ3BKVWV3cEhNWVpvZHNNcFpaYzRmT1o0eXAwNFdkWis1CkhTS05wZU5GZDZOL01IMHdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRQZHRxRGlXVjJTdWVTRUE4VApOZjR2SkE3bUN6QWZCZ05WSFNNRUdEQVdnQlFpWmdpV3ZUdWlRMVZzZ2FGUFZTVFk1NTliSGpBS0JnZ3Foa2pPClBRUURBZ05IQURCRUFpQVdCajNCdk51cTZ4dDR3Umk2bmtsRi9TMUtMNVFRT0xUcytqbkNpTHEyWVFJZ09GQ1cKcEoyU2lLd2J4eGVRbytVUlRKVnpSVG00RHVKZU1kSEVKNW5JZ2s4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
              # tls.key from clustermesh-apiserver-remote-cert secret in Cluster 2
              key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU81RUhEK0d4WkFWTW1TUVNYUVZyQjNNNWFKd1ZzcWtBelFhanZUd1FteE5vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZGFJS2IxUUxIejdxek5ET0RjbkhXRTBDMVFKOEZOTU1la1RMcXVqMzd3bWdwSlVld3BITQpZWm9kc01wWlpjNGZPWjR5cDA0V2RaKzVIU0tOcGVORmR3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
      useAPIServer: true
    ##### mod
    cni:
      exclusive: false
    envoy:
      enabled: false
      podSecurityContext:
        seccompProfile:
          type: RuntimeDefault
    hubble:
      relay:
        enabled: true
        podSecurityContext:
          seccompProfile:
            type: RuntimeDefault
      tls:
        auto:
          method: cronJob
      ui:
        backend: {}
        enabled: true
        frontend: {}
        securityContext:
          enabled: true
          seccompProfile:
            type: RuntimeDefault
    ipam:
      operator:
        clusterPoolIPv4MaskSize: 24
        clusterPoolIPv4PodCIDRList:
        - 172.25.0.0/16
    ##### k8sServiceHost: ___CLUSTER_1__ #TODO__REPLACE__WITH_K8S_API_HOST 
    k8sServiceHost: bcqd8rwjbn.shared-seed.latest.snapshots.k8c.io
    k8sServicePort: 6443
    kubeProxyReplacement: "true"
    operator:
      podSecurityContext:
        seccompProfile:
          type: RuntimeDefault
      replicas: 1
      securityContext:
        seccompProfile:
          type: RuntimeDefault
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
